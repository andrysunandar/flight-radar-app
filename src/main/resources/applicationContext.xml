<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-http="http://www.springframework.org/schema/integration/http"
       xmlns:int-xml="http://www.springframework.org/schema/oxm" xmlns:beans="http://www.springframework.org/schema/mvc"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:websocket="http://www.springframework.org/schema/websocket"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http.xsd http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    
    <context:component-scan base-package="com.bl.rekweb.demo.flight" />
    
    <int:channel id="flightinfotrigger" />
    <int:channel id="flightinfo" />
    <int:channel id="flightinfodata" />
    
    <int:inbound-channel-adapter channel="flightinfotrigger" expression="''">
        <int:poller fixed-delay="10000"> </int:poller>        
    </int:inbound-channel-adapter>
    
    <int-http:outbound-gateway id="flightHttpGateway"
                               request-channel="flightinfotrigger"
                               url="https://opensky-network.org/api/states/all"
                               http-method="GET"
                               expected-response-type="java.lang.String"
                               charset="UTF-8"
                               reply-channel="flightinfo">
    </int-http:outbound-gateway>
    
    <int:service-activator input-channel="flightinfo" ref="receiveFlightMsg" method="printData" />
    
    <int:channel id="flightDatObject" />

    <int:json-to-object-transformer input-channel="flightinfo" output-channel="flightDatObject" type="com.bl.rekweb.demo.flight.model.FlightData" />

    <int:service-activator input-channel="flightDatObject" ref="receiveFlightMsgObject" method="printData" />
    <!--
      <bean id="customObjectMapper" class="com.bl.rekweb.demo.flight.model.ObjectMapperFactory" factory-method="getMapper" />
      <int:logging-channel-adapter id="flightDatObject"   level="INFO" />
      <int:transformer input-channel="weatherinfo" output-channel="weatherinfodata" />
      -->
    <bean id="trustStore"
          class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" value="#{@systemProperties}" />
        <property name="targetMethod" value="putAll" />
        <property name="arguments">
            <!-- The new Properties -->
            <util:properties>
                <prop key="javax.net.ssl.trustStore">/home/andry/.keystore</prop>
                <prop key="javax.net.ssl.keyStorePassword">changeit</prop>
            </util:properties>
        </property>
    </bean>

    <bean id="keystore"
          class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" value="#{@systemProperties}" />
        <property name="targetMethod" value="putAll" />
        <property name="arguments">
            <!-- The new Properties -->
            <util:properties>
                <prop key="javax.net.ssl.trustStore">/home/andry/.keystore</prop>
                <prop key="javax.net.ssl.keyStorePassword">changeit</prop>
            </util:properties>
        </property>
    </bean>

    <!-- Define the ActiveMQ connection factory -->
    <bean id="connectionFactory"
                class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory">
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                <property name="brokerURL">
                    <value>kitapiknik73.noip.me</value>
                </property>
            </bean>
        </property>
        <property name="sessionCacheSize" value="100" />
        <property name="cacheProducers" value="false" />
    </bean>

    <bean id="destFlightTopic" class="org.apache.activemq.command.ActiveMQTopic" >
        <constructor-arg index="0" value="flight_data" />
    </bean>

    <!-- preparing send data to scheduler queue -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate" >
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="defaultDestination" ref="destFlightTopic" />
        <property name="deliveryPersistent" value="false" />
    </bean>

    <!--
    <websocket:message-broker application-destination-prefix="/app">
        <websocket:stomp-endpoint path="/hello">
            <websocket:sockjs/>
        </websocket:stomp-endpoint>
        <websocket:simple-broker prefix="/topic"/>
    </websocket:message-broker>
    -->

</beans>